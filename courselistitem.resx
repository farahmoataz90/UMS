<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>