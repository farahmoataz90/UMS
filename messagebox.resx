<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
</root>